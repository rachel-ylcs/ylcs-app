diff --git a/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV.h b/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV.h
index 20683da..8fccb6c 100644
--- a/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV.h
+++ b/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV.h
@@ -142,7 +142,7 @@ class MMKV {
 #  define mmkv_retain_key(key) [key retain]
 #  define mmkv_release_key(key) [key release]
 #else
-    using MMKVKey_t = std::string_view;
+    using MMKVKey_t = std::string;
     static bool isKeyEmpty(MMKVKey_t key) { return key.empty(); }
 #  define mmkv_key_length(key) key.length()
 #  define mmkv_retain_key(key) ((void) 0)
diff --git a/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV_IO.cpp b/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV_IO.cpp
index dd43c53..4bb06ea 100644
--- a/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV_IO.cpp
+++ b/node_modules/react-native-mmkv-storage/MMKV/Core/MMKV_IO.cpp
@@ -732,7 +732,7 @@ bool MMKV::setDataForKey(MMBuffer &&data, MMKVKey_t key, bool isDataHolder) {
 }
 
 template <typename T>
-static void eraseHelper(T& container, std::string_view key) {
+static void eraseHelper(T& container, std::string key) {
     auto itr = container.find(key);
     if (itr != container.end()) {
         container.erase(itr);
diff --git a/node_modules/react-native-mmkv-storage/android/generated/jni/CMakeLists.txt b/node_modules/react-native-mmkv-storage/android/generated/jni/CMakeLists.txt
index 419c4e9..e5a53ab 100644
--- a/node_modules/react-native-mmkv-storage/android/generated/jni/CMakeLists.txt
+++ b/node_modules/react-native-mmkv-storage/android/generated/jni/CMakeLists.txt
@@ -20,9 +20,7 @@ target_link_libraries(
   react_codegen_MMKVStorageSpec
   fbjni
   jsi
-  # We need to link different libraries based on whether we are building rncore or not, that's necessary
-  # because we want to break a circular dependency between react_codegen_rncore and reactnative
-  reactnative
+  react_nativemodule_core
 )
 
 target_compile_options(
